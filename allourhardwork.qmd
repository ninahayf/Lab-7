---
title: "allourhardwork"
format: html
---

## making the dates in format YYYY-MM-DD
library(lubridate)

hot_days$Start_Date <- ym(hot_days$Start_Date)

cold_days$Start_date <- ym(cold_days$Start_Date)


## reading in data tables 
library(readr) 

cold_days <- read_csv("data/cold_days.csv")
View(cold_days)

hot_days <- read_csv("data/hot_days.csv")
View(hot_days)

elevation <- read_csv("data/elevation.csv")
View(elevation)

high_temp <- read_csv("data/highest_temp.csv")
View(high_temp)

humid <- read_csv("data/humidity.csv")
View(humid)

low_temp <- read_csv("data/lowest_temp.csv")
View(low_temp)

nrmavg <- read_csv("data/nrmavg.csv")
View(nrmavg)

nrmmax <- read_csv("data/nrmmax.csv")
View(nrmmax)

nrmmin <- read_csv("data/nrmmin.csv")
View(nrmmin)

UHI <- read_csv("data/UHI.csv")
View(UHI)

CO_LA <- read_csv("data/denver_neworleans.csv")
View(CO_LA)


## Combining A (afternoon) and M (morning) data within humidity dataset 
humid <- read.csv("data/humidity.csv")

colnames(humid)

colnames(humid) <- c("Station ID", "City", "State", "Start Date", "End Date", "JAN_M", "JAN_A", "FEB_M", "FEB_A", "MAR_M", "MAR_A", "APR_M", "APR_A", "MAY_M", "MAY_A", "JUN_M", "JUN_A", "JUL_M", "JUL_A", "AUG_M", "AUG_A", "SEP_M", "SEP_A", "OCT_M", "OCT_A", "NOV_M", "NOV_A", "DEC_M", "DEC_A", "ANN_M", "ANN_A")

colnames(humid)

# Line plot comparing Den to NewO humidity 
```{r}
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)

# Load in Data
humid <- read.csv("data/humidity.csv")

# Fix colnames in humid data
colnames(humid) <- c("Station ID", "City", "State", "Start Date", "End Date", "JAN_M", "JAN_A", "FEB_M", "FEB_A", "MAR_M", "MAR_A", "APR_M", "APR_A", "MAY_M", "MAY_A", "JUN_M", "JUN_A", "JUL_M", "JUL_A", "AUG_M", "AUG_A", "SEP_M", "SEP_A", "OCT_M", "OCT_A", "NOV_M", "NOV_A", "DEC_M", "DEC_A", "ANN_M", "ANN_A")

# Filter data for Den and NewO
humid_filtered <- humid %>%
  filter(City %in% c("DENVER", "NEW ORLEANS")) %>%
  select(City, JAN_M, JAN_A, FEB_M, FEB_A, MAR_M, MAR_A, APR_M, APR_A, MAY_M, MAY_A, JUN_M, JUN_A, JUL_M, JUL_A, AUG_M, AUG_A, SEP_M, SEP_A, OCT_M, OCT_A, NOV_M, NOV_A, DEC_M, DEC_A, ANN_M, ANN_A)

# Reshape data
humid_long <- humid_filtered %>%
  pivot_longer(cols = JAN_M:DEC_A,  
               names_to = c("Month", "Time"), 
               names_pattern = "(\\w{3})_(\\w)",
               values_to = "Humidity")

head(humid_long)
```
```{r}
library(ggplot2)

ggplot(humid_long, aes(x = Month, y = Humidity, color = City, group = interaction(City, Month))) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  labs(title = "Monthly Humidity Comparison: Denver vs. New Orleans", 
       x = "Month", 
       y = "Humidity (%)") +
  scale_x_discrete(limits = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC")) +
    scale_color_manual(values = c("DENVER" = "skyblue", "NEW ORLEANS" = "deeppink")) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
New Orleans towering over Denver in humidity year-round. 

## Comparing # of hot & cold days between Denver and New Orleans in a Bar Plot
```{r}
library(dplyr)
library(ggplot2)
library(tidyr)

# Read the cold and hot datasets 
cold_days <- read.csv("data/cold_days.csv")
hot_days <- read.csv("data/hot_days.csv")

# Filter for Denver and New Orleans only 
cold_days_filtered <- cold_days %>%
  filter(City %in% c("DENVER", "NEW ORLEANS")) %>%
  mutate(type = "Cold Days (≤32°F)")

hot_days_filtered <- hot_days %>%
  filter(City %in% c("DENVER", "NEW ORLEANS")) %>%
  mutate(type = "Hot Days (≥90°F)")

# Add a new column to distinguish hot and cold
cold_days_filtered$type <- "Cold Days (≤32°F)"
hot_days_filtered$type <- "Hot Days (≥90°F)"

# Only keep City, State, Start_Date, and ANN (Annual total)
cold_days_clean <- cold_days_filtered %>%
  select(City, State, Start_Date, ANN, type)

hot_days_clean <- hot_days_filtered %>%
  select(City, State, Start_Date, ANN, type)

# Rename ANN to Days
cold_days_clean <- cold_days_clean %>%
  rename(Days = ANN)

hot_days_clean <- hot_days_clean %>%
  rename(Days = ANN)

# Start_Date being the same for both datasets
cold_days_clean <- cold_days_clean %>%
  mutate(Start_Date = as.character(Start_Date))

hot_days_clean <- hot_days_clean %>%
  mutate(Start_Date = as.character(Start_Date))

# Combine cold and hot datasets 
combined_days <- bind_rows(cold_days_clean, hot_days_clean)

# Convert Start_Date to Year
combined_days <- combined_days %>%
  mutate(Year = as.numeric(substr(Start_Date, 1, 4)))

# Plot
ggplot(combined_days, aes(x = City, y = Days, fill = type)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Hot and Cold Days in Denver vs New Orleans",
    x = "City",
    y = "Number of Days",
    fill = "Temperature Type"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c("skyblue", "deeppink"))
```
New Orleans has more missing data values than Denver did, hence why the dramatic difference. Setting aside climate change, we know that New Orleans has significantly more hot days than Denver because its closer to the equator. 


## Linear Regression Plot 
```{r}
# Read in data 
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)

climate_data <- read_csv("data/denver_neworleans.csv")
elevation <- read_csv("data/elevation.csv")
UHI <- read_csv("data/UHI.csv")

# Clean and prep datasets 
elevation <- elevation %>%
  mutate(Elevation_ft = ( `High Feet` + `Low Feet` ) / 2) %>%
  select(City, Elevation_ft)

UHI <- UHI %>%
  rename(UHI_Effect = `Citywide urban heat island effect (rolled-up from census tract data, weighted by area, in degrees F)`) %>%
  select(City, UHI_Effect)

final_data$City <- toupper(final_data$City)
UHI$City <- toupper(UHI$City)

View(final_data)

# Merge everything 
final_data <- climate_data %>%
  left_join(elevation, by = "City") %>%
  left_join(UHI, by = "City")

# Remove rows with NA values in the necessary columns
final_data_clean <- final_data %>%
  filter(!is.na(TAVG), !is.na(Elevation_ft), !is.na(UHI_Effect))

# Build model 
model <- lm(TAVG ~ Elevation_ft + UHI_Effect, data = final_data_clean)

summary(model)

# Scatter plot for Elevation vs TAVG
ggplot(final_data_clean, aes(x = Elevation_ft, y = TAVG, color = City)) +
  geom_point() +
  geom_smooth(method = "lm", col = "green") +
  labs(title = "Elevation vs. Temperature (TAVG)", x = "Elevation (ft)", y = "Temperature (TAVG)") +
  scale_color_manual(values = c("NEW ORLEANS" = "deeppink", "DENVER" = "skyblue"))

# Scatter plot for UHI Effect vs TAVG
ggplot(final_data_clean, aes(x = UHI_Effect, y = TAVG, color = City)) +
  geom_point() +
  geom_smooth(method = "lm", col = "yellow") +
  labs(title = "UHI Effect vs. Temperature (TAVG)", x = "UHI Effect (°F)", y = "Temperature (TAVG)") +
  scale_color_manual(values = c("NEW ORLEANS" = "deeppink", "DENVER" = "skyblue"))
```


# Comparing New Orleans average temperature changes over 20 years to Denvers 
```{r}
library(tidyverse)
temp_data <- read_csv("data/denver_neworleans.csv")

temp_data_clean <- temp_data %>% 
  filter(!is.na(TAVG))

denver_data <- temp_data_clean %>% filter(City == "DENVER")
new_orleans_data <- temp_data_clean %>% filter(City == "NEW ORLEANS")

ggplot(denver_data, aes(x = Year, y = TAVG)) +
  geom_line(color = "skyblue", linewidth = 1) +
  geom_point(color = "skyblue") +
  labs(title = "Average Temperature Over Time - Denver",
       x = "Year",
       y = "Average Temperature (TAVG)") +
  theme_minimal()

ggplot(new_orleans_data, aes(x = Year, y = TAVG)) +
  geom_line(color = "deeppink", linewidth = 1) +
  geom_point(color = "deeppink") +
  labs(title = "Average Temperature Over Time - New Orleans",
       x = "Year",
       y = "Average Temperature (TAVG)") +
  theme_minimal()
```

# More Graphs
```{r}
# Load libraries
library(tidyverse)

# Read and clean the data
temp_data <- read_csv("data/denver_neworleans.csv") %>%
  filter(!is.na(TAVG))  # Drop missing average temps if needed

# Focus only on the important columns
selected_vars <- temp_data %>%
  select(City, Year, EMAXT, EMINT, TMAX, TMIN, DT32, DX90)

# Pivot data longer so each measurement type is a "variable"
long_temp_data <- selected_vars %>%
  pivot_longer(cols = c(EMAXT, EMINT, TMAX, TMIN, DT32, DX90),
               names_to = "Measurement",
               values_to = "Value")

# Separate data for Denver
denver_data <- long_temp_data %>%
  filter(City == "DENVER")

# Separate data for New Orleans
new_orleans_data <- long_temp_data %>%
  filter(City == "NEW ORLEANS")

# Plot for Denver
ggplot(denver_data, aes(x = Year, y = Value)) +
  geom_line(color = "skyblue", linewidth = 1) +
  geom_point(color = "skyblue") +
  facet_wrap(~ Measurement, scales = "free_y") +
  labs(title = "Denver",
       x = "Year",
       y = "Value") +
  theme_minimal()

# Plot for New Orleans
ggplot(new_orleans_data, aes(x = Year, y = Value)) +
  geom_line(color = "deeppink", linewidth = 1) +
  geom_point(color = "deeppink") +
  facet_wrap(~ Measurement, scales = "free_y") +
  labs(title = "New Orleans",
       x = "Year",
       y = "Value") +
  theme_minimal()
```



